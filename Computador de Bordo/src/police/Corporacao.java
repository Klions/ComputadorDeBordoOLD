/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package police;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.time.Instant;
import java.time.ZonedDateTime;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.JDA;
import net.dv8tion.jda.api.entities.TextChannel;
import net.dv8tion.jda.api.entities.User;
import org.json.JSONArray;
import org.json.JSONObject;
import org.ocpsoft.prettytime.PrettyTime;
import police.configs.ConexaoDB;
import police.configs.Config;
import police.configs.GetImages;
import police.configs.Usuario;

/**
 *
 * @author John
 */
public class Corporacao extends javax.swing.JFrame {

    /**
     * Creates new form Corporacao
     */
    JButton[] PMenos = new JButton[50];
    JButton[] PMais = new JButton[50];
    JButton[] PRemover = new JButton[50];
    
    JLabel[] Nome = new JLabel[50];
    JLabel[] Patente = new JLabel[50];
    JLabel[] FzeOq = new JLabel[50];
    
    Usuario usuarios = new Usuario();
    ConexaoDB conexao = new ConexaoDB();
    InicializadorMain policia = new InicializadorMain();
    Config config = new Config();
    
    String passaporteg = "";
    String nomeusuariog = "";
    
    String PassaAddU="";
    String NomeU="";
    String DiscordAddU="";
    JSONArray discordDBarray = new JSONArray();
    
    String NomeP="";
    int PatenteP=0;
    int PatentePA=0;
    int PatenteInsigna=0;
    int PatenteInsignaA=0;
    String CodigoP="";
    String Discord="";
    int PassaporteP=-1;
    
    int PassCida=-1;
    
    int TimerAtte = 30;
    
    boolean newcodigo = false;
    
    JDA jda;
    
    JSONObject usuariosDB = new JSONObject();
    JSONArray usuariosDBarray = new JSONArray();
    JSONArray usuarioMyDBarray = new JSONArray();
    JSONArray hierarquiaDBarray = new JSONArray();
    
    
    private static final String ALPHA_NUMERIC_STRING = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    
    public Corporacao() {
        initComponents();
        IniciarDados();
        DiscordBot();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void IniciarDados(){
        
        getContentPane().setBackground(new java.awt.Color(13, 32, 64));
        jPanel1.setBackground(new java.awt.Color(13, 32, 64));
        jPanel2.setBackground(new java.awt.Color(13, 32, 64));
        jPanel3.setBackground(new java.awt.Color(13, 32, 64));
        jPanel4.setBackground(new java.awt.Color(13, 32, 64));
        jPanel5.setBackground(new java.awt.Color(13, 32, 64));
        
        this.setLocationRelativeTo(null);
        //this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource(config.img_CBIcone)));
        if(InicializadorMain.ModoOffline){
            this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("imagens/CB2.png")));
        }else{
            this.setIconImage(new ImageIcon(GetImages.LogoCB).getImage());
        }
        
        int totalpatentes = 14;
        Bpatentes.removeAllItems();
        desfazer.setVisible(false);
        
        for (int i=0; i<=usuarios.Qntptt; i++){
            Bpatentes.addItem(usuarios.Patentes(i));
        }
        jPanel2.revalidate();
        jPanel2.repaint();
        
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        
        btexonerado.setEnabled(false);
        
        usuariosDBarray = InicializadorMain.usuariosDBarray;
        discordDBarray = InicializadorMain.discordDBarray;
        
        //usuariosDBarray = usuarios.AttDBUsuarios();
        //discordDBarray = usuarios.AttDBDiscord();
        
        //AttDBUsuarios();
        AttDBHierarquia();
        TabelaAtt();
        
        Dados();
        Timere();
    }
    public void DiscordBot(){
        jda = policia.getJDA();
        /*try{

            jda = new JDABuilder("NTQxMTIxMzIwNjcxNTEwNTI4.Xfl2zQ.PBtKk452VMOzYWNsG9uvYbOu4OY")         // The token of the account that is logging in.

                    .addEventListeners(new DiscordMessage())  // An instance of a class that will handle events.

                    .build();

            jda.awaitReady(); // Blocking guarantees that JDA will be completely loaded.

            System.out.println("Finished Building JDA!");
            
            

        }catch (InterruptedException e)

        {

            //Due to the fact that awaitReady is a blocking method, one which waits until JDA is fully loaded,

            // the waiting can be interrupted. This is the exception that would fire in that situation.

            //As a note: in this extremely simplified example this will never occur. In fact, this will never occur unless

            // you use awaitReady in a thread that has the possibility of being interrupted (async thread usage and interrupts)

            e.printStackTrace();

        } catch (LoginException ex) {
            Logger.getLogger(Corporacao.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }
    
    public void Timere (){
        int delay = 500;   // tempo de espera antes da 1ª execução da tarefa.
        int interval = 1000;  // intervalo no qual a tarefa será executada.
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
          public void run() {
            //System.out.println("Olá World!"); 
            if(TimerAtte > 0){
                TimerAtte--;
                String taimer;
                if(TimerAtte>9){
                    taimer=""+TimerAtte;
                }else{
                    taimer="0"+TimerAtte;
                }
                attTab.setText("ATUALIZAR ("+taimer+")");
                attTab.setEnabled(false);
            }else{
                attTab.setEnabled(true);
                attTab.setText("ATUALIZAR AGORA");
            }
          }
        }, delay, interval);
    }
    
    public void Dados(){
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        
        membros.getColumnModel().getColumn(0).setPreferredWidth(50);
        membros.getColumnModel().getColumn(1).setPreferredWidth(40);
        membros.getColumnModel().getColumn(2).setPreferredWidth(20);
        //membros.getColumnModel().getColumn(3).setPreferredWidth(40);
        
        
        membros.getColumnModel().getColumn(0).setHeaderRenderer(centerRenderer);
        membros.getColumnModel().getColumn(1).setHeaderRenderer(centerRenderer);
        membros.getColumnModel().getColumn(2).setHeaderRenderer(centerRenderer);
        //membros.getColumnModel().getColumn(3).setHeaderRenderer(centerRenderer);
        
        membros.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        membros.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        membros.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        //membros.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        
        //TabelaAtt();
        
        editar.setEnabled(false);
        
        Alterou();
    }
    public void TabelaAtt(){
        DefaultTableModel model = (DefaultTableModel) membros.getModel();
        model.setRowCount(0);
        pesquisa.setText("");
        PesquisarT();
        TimerAtte=20;
        //System.out.println("usuariosDBarray: "+usuariosDBarray.toString()+" ?°/ ");
        for(int i = 0; i < usuariosDBarray.length(); i++){
            JSONObject o = usuariosDBarray.getJSONObject(i);
            int pass = o.getInt("id_usuario");
            int pter=0;
            boolean lspd=false;
            for(int i2 = 0; i2 < hierarquiaDBarray.length(); i2++){
                JSONObject ohier = hierarquiaDBarray.getJSONObject(i2);
                //System.out.println("hierarquiaDBarray: "+ohier.toString()+" // ");
                if(pass==ohier.getInt("id_usuario")){
                    pter = ohier.getInt("cargo");
                    lspd = pter!=99;
                }
            }
            if(lspd){
                //String discord = Usuario.DiscordPorID(pass);
                
                //System.out.println("o.DBarray: "+o.toString()+" ?°/ ");
                /*if(discord.length() >= 10){
                    discord="SIM";
                }else{
                    discord="NÃO";
                }*/
                String nome = o.getString("nome")+" "+o.getString("sobrenome");
                if(pter != 99 && pter != 16){
                    String patenter = usuarios.Patentes(pter);
                    model.addRow(new Object[]{nome, patenter, pass});
                }
            }
            //}
        }
    }
    
    public void Alterou(){
        boolean BOL = false; //true
        if(pttatual.getText().equals(newptt.getText()))BOL=false;
        jButton5.setEnabled(BOL);
        jButton6.setEnabled(BOL);
    }
    
    public void MensagemDiscord(JSONObject DiscordTag){
        //User usuar = jda.getUserByTag(DiscordTag);
            int passaporte=DiscordTag.getInt("passaporte");
            String nome=DiscordTag.getString("nome");
            String codigo=DiscordTag.getString("codigo");
            
            String discord=DiscordTag.getString("discord");//Usuario.DiscordPorID(passaporte);
            if(!"".equals(discord)){
                String n_cidade = InicializadorMain.info_cidade.getString("nome_cidade");
                String n_policia = InicializadorMain.info_cidade.getString("nome_policia");
                String n_policiaabv = InicializadorMain.info_cidade.getString("nome_policia_abv").toUpperCase();
                String url_logo = InicializadorMain.info_cidade.getString("url_logo");
                
                String nome_patente=DiscordTag.getString("nome_patente");
                int OqueFez=DiscordTag.getInt("oqfez");
                String OqFez,OqFez2;
                switch (OqueFez) {
                    case 1:
                        OqFez="Você foi recrutado";
                        OqFez2="Recrutado para a "+n_policiaabv+" como "+nome_patente+".";
                        break;
                    case 2:
                        OqFez="Você foi recrutado";
                        OqFez2="Recrutado para a "+n_policiaabv+" como ";
                        break;
                    default:
                        OqFez="Mudança de Acesso";
                        OqFez2="Foi modificado o seu código de acesso do **Computador de Bordo**.";
                        break;
                }

                User usuar = jda.getUserById(discord);

                EmbedBuilder eb = new EmbedBuilder();
                
                
                eb.setAuthor(n_cidade+" "+n_policiaabv+" - Mudança de Acesso ", "https://imgur.com/vBK8vRk.png");
                eb.setFooter("Computador de Bordo • "+n_cidade, "https://imgur.com/vBK8vRk.png");
                        
                eb.setColor(new Color(0x0D2040));
                eb.setDescription(OqFez2+
                    "\n\n**Nome Completo:** "+nome+
                    "\n**Passaporte:** "+passaporte+
                    "\n**Código:** "+codigo);

                //eb.addField(":regional_indicator_i: :regional_indicator_n: :regional_indicator_f: :regional_indicator_o:   :regional_indicator_c: :regional_indicator_i: :regional_indicator_d: :regional_indicator_a: :regional_indicator_d: :regional_indicator_a: :regional_indicator_o:", "Você pode recursar a "+Apree+" com um advogado pelo número do procotolo.", false);
                /*eb.addField("Nome Completo", ":page_facing_up: "+nome, true);
                eb.addField("Passaporte", ":bookmark_tabs: "+passaporte, true);
                eb.addField("Código", ":id: "+codigo, true);
                eb.addField(" ", " ", false);
                eb.addField("Acesse agora mesmo o computador de bordo!", ":speech_balloon: Baixe direto pelo link: "+config.linkB, false);
                */
                //eb.setFooter("Computador de Bordo [ver. "+config.versao+"]", null);
                Instant instant = Instant.from(ZonedDateTime.now());
                eb.setTimestamp(instant);
                eb.setThumbnail(url_logo);

                usuar.openPrivateChannel().queue((channel) ->
                {
                    channel.sendMessage(eb.build()).queue();
                });
            }else{
                showMessageDialog(null,
                    "Não conseguimos localizar o Discord de "+nome+".",
                    "Discord não encontrado!",
                    JOptionPane.ERROR_MESSAGE);
            }
    }
    
    public void MensagemHierarquia(JSONObject dados){
        
        //MUDAR ESSAS COISAS
        //String Titulo = dados.getString("oqfez");
        Usuario usuario = new Usuario();
        JSONObject obj = Usuario.UsuarioMain;//new JSONObject(usuario.getDados());
        
        String id_usuario = dados.getString("passaporte");
        String id_promoveu = obj.getString("id_usuario");
        
        String nome_usuario = dados.getString("nome");
        String nome_promoveu = obj.getString("nome")+" "+obj.getString("sobrenome");
        String patente = dados.getString("nome_patente");
        
        String Texto = "**"+nome_usuario+"** foi **recrutado** para a "+config.Abv_NomePolicia+" como **"+patente+"**.";
        
        int cor = 0x339933;
        
        String canal="669698732517752852";
        TextChannel usuar = jda.getTextChannelById​(Long.parseLong(canal));
        if(usuar != null){
            EmbedBuilder eb = new EmbedBuilder();
            eb.setTitle("Adição na hierarquia", null);
            eb.setColor(new Color(cor));
            eb.setDescription(Texto);
            eb.addField("Policial recrutado", nome_usuario+" ("+id_usuario+")", true);
            eb.addField("Oficial recrutador", nome_promoveu+" ("+id_promoveu+")", true);
            eb.addField("Patente", patente, true);

            eb.setFooter("Computador de Bordo [ver. "+config.versao+"]", null);

            eb.setThumbnail(config.img_DiscordPolicia);
            Instant instant = Instant.from(ZonedDateTime.now());
            eb.setTimestamp(instant);

            usuar.sendMessage(eb.build()).queue();
        }
    }
    
    
    
    public void AtualizarInfo(){
        //System.out.print(membros.getValueAt(membros.getSelectedRow(), 2).toString());
        String PassSelecionado = "0";
        newcodigo=false;
        if(membros.getSelectedRow() < 0){
            if(nomeusuariog.length() > 0)PassSelecionado = nomeusuariog;
        }else{
            PassSelecionado = membros.getValueAt(membros.getSelectedRow(), 2).toString();
            nomeusuariog = PassSelecionado;
        }
        for(int i = 0; i < usuariosDBarray.length(); i++){
            JSONObject o = usuariosDBarray.getJSONObject(i);
            int paser = Integer.parseInt(PassSelecionado);
            if(paser==o.getInt("id_usuario")){
                int pass = o.getInt("id_usuario");
                String discord = Usuario.DiscordPorID(pass);;
                String nome = o.getString("nome");
                String sobrenome = o.getString("sobrenome");
                String codigo = o.getString("codigo");
                //System.out.println("usuariosDBarray: "+o.toString()+" ?°/ ");

                int pter=0;
                int pter2=0;
                int pins=0;
                boolean checker=false;
                long dater=0;
                long datar=0;
                for(int i2 = 0; i2 < hierarquiaDBarray.length(); i2++){
                    JSONObject ohier = hierarquiaDBarray.getJSONObject(i2);
                    //System.out.println("hierarquiaDBarray: "+ohier.toString()+" // ");
                    if(pass==ohier.getInt("id_usuario")){
                        pter = ohier.getInt("cargo");
                        pter2= ohier.getInt("cargo_antigo");
                        datar= ohier.getLong("data");
                        pins=ohier.getInt("stars");
                        if(!checker){
                            checker=true;
                            dater=ohier.getLong("data");
                        }
                    }
                }
                String patente = usuarios.Patentes(pter);
                String patenteo = usuarios.Patentes(pter2);
                PatenteP=pter;
                PatentePA=PatenteP;
                PatenteInsigna=pins;
                PatenteInsignaA=pins;
                
                PrettyTime p = new PrettyTime();
                long ultimologin = o.getLong("ultimologin");
                String ErOq;
                if(ultimologin < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(ultimologin));
                }
                
                jLabel22.setText(ErOq);

                //usuarios.Patentes();

                cid.setText(pass+"");
                cnome.setText(nome);
                cnome1.setText(sobrenome);
                
                //ccodigo.setText(codigo);
                ccodigo.setText("•••••");
                //cdiscord.setText(discord);

                nomeptt.setText(nome);

                String PttInsi2="";
                switch (PatenteInsigna) {
                    case 0:
                        PttInsi2= " [■■■]";
                        break;
                    case 1:
                        PttInsi2= " [*■■]";
                        break;
                    case 2:
                        PttInsi2= " [**■]";
                        break;
                    case 3:
                        PttInsi2= " [***️]";
                        break;
                    default:
                        PttInsi2= " [■■■]";
                        break;
                }
                pttatual.setText(patente+" "+PttInsi2);
                
                
                newptt.setText(patente);

                jLabel36.setText(patenteo);

                NomeP=nome+" "+sobrenome;
                //PatenteP=resulteSet.getInt("patente");
                PatentePA=PatenteP;
                CodigoP=codigo;
                Discord=discord;
                PassaporteP=pass;

                /*
                jButton3.setEnabled(true);
                jButton4.setEnabled(true);
                btexonerado.setEnabled(true);*/
                jButton3.setEnabled(false);
                jButton4.setEnabled(false);
                btexonerado.setEnabled(true);

                editar.setEnabled(true);


                //System.out.println(p.format(new Date(System.currentTimeMillis() - 1000*60*10)));
                //System.out.println(System.currentTimeMillis());
                
                if(datar < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(datar));
                }
                jLabel35.setText(ErOq);

                if(dater < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(dater));
                }
                jLabel44.setText(ErOq);
            }
        }
        
        AtualizarPtt();
        DesativarCampos();
        
        /*
        //System.out.print(membros.getSelectedRow(), 2));
        ResultSet resulteSet = null;
        resulteSet = conexao.readDataBase2("usuarios", "passaporte", PassSelecionado);
        
        long datar=System.currentTimeMillis();
        try {
            while (resulteSet.next()) {
                PrettyTime p = new PrettyTime();
                String nome = resulteSet.getString("nome");
                //String patente = usuarios.Patentes(resulteSet.getInt("patente"));
                
                String pass = resulteSet.getString("passaporte");
                String discord = resulteSet.getString("discord");
                String codigo = resulteSet.getString("codigo");
                
                long ultimologin = resulteSet.getLong("ultimologin");
                jLabel22.setText(p.format(new Date(ultimologin)));
                
                //usuarios.Patentes();
                
                ResultSet resulta = conexao.getUltimaPatente("hierarquia", "id_usuario", pass, "DESC");
                int pater=0;
                
                while(resulta.next()) {
                    PatenteP = Integer.parseInt(resulta.getString("cargo"));
                    pater = Integer.parseInt(resulta.getString("cargo_antigo"));
                    datar=resulta.getLong("data");
                    
                }
                String patente = usuarios.Patentes(PatenteP);
                String patenteo = usuarios.Patentes(pater);
                cid.setText(pass);
                cnome.setText(nome);
                ccodigo.setText(codigo);
                cdiscord.setText(discord);
                
                nomeptt.setText(nome);
                
                pttatual.setText(patente);
                newptt.setText(patente);
                
                jLabel36.setText(patenteo);
                
                NomeP=nome;
                //PatenteP=resulteSet.getInt("patente");
                PatentePA=PatenteP;
                CodigoP=codigo;
                PassaporteP=Integer.parseInt(pass);
                
                jButton3.setEnabled(true);
                jButton4.setEnabled(true);
                
                btexonerado.setEnabled(true);
                
                editar.setEnabled(true);
                
                
                //System.out.println(p.format(new Date(System.currentTimeMillis() - 1000*60*10)));
                System.out.println(System.currentTimeMillis());
                jLabel35.setText(p.format(new Date(datar)));
                
                ResultSet resulta2 = conexao.getUltimaPatente("hierarquia", "id_usuario", pass, "ASC");
                long dater=System.currentTimeMillis();
                while(resulta2.next()){
                    dater=resulta2.getLong("data");
                }
                jLabel44.setText(p.format(new Date(dater)));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Corporacao.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
    }
    
    
    public void AtualizarPtt(){ //ATIVAR DPS DE ARRUMAR
        
        /*
        if(PatenteP == usuarios.Qntptt){
            jButton4.setEnabled(false);
        }else{
            jButton4.setEnabled(true);
        }
        if(PatenteP == 0 && PatenteInsigna == 0){
            jButton3.setEnabled(false);
        }else{
            jButton3.setEnabled(true);
        }
        if(PatenteP == 99){
            jButton3.setEnabled(false);
            jButton4.setEnabled(true);
            PatenteInsigna=0;
        }
        
        if(PatenteP < 0){
            PatenteP = 0;
        }else
        if(PatenteP == 99){
            PatenteP=99;
        }else
        if(PatenteP > usuarios.Qntptt){
            PatenteP=usuarios.Qntptt;
        }
        btexonerado.setEnabled(true);
        
        String PttInsi="";
        switch (PatenteInsigna) {
            case 0:
                PttInsi= " [■■■]";
                break;
            case 1:
                PttInsi= " [*■■]";
                break;
            case 2:
                PttInsi= " [**■]";
                break;
            case 3:
                PttInsi= " [***️]";
                break;
            default:
                PttInsi= " [■■■]";
                break;
        }
        String frmtPtt=usuarios.Patentes(PatenteP);
        if(PatenteP < 12){
            frmtPtt+=PttInsi;
        }
        newptt.setText(frmtPtt);
        
        int condif = PatenteP-PatentePA;
        String Dife = "";
        if(condif != 0){
            Dife=" / "+condif;
        }
        
        jLabel40.setText("NOVA PATENTE"+Dife);
        Alterou();*/
    }
    
    
    public void SalvarDados(){
        String pass = cid.getText();
        //boolean passou = conexao.getPossuiRegistro("cb_identities", "id", pass);
        //if(!passou){
            
            JSONObject my_obj = new JSONObject();
            String nome = cnome.getText();
            String sobrenome = cnome1.getText();
            //String discord = cdiscord.getText();
            String codigo = ccodigo.getText();
            my_obj.put("passaporte", pass);
            my_obj.put("nome", nome+" "+sobrenome);
            my_obj.put("codigo", codigo);
            my_obj.put("discord", Usuario.DiscordPorID(Integer.parseInt(pass)));
            my_obj.put("nome_patente", "");
            my_obj.put("oqfez", 0);
            if(conexao.AtualizarDatabaseDado("cb_users", my_obj)){
                int dialogButton = JOptionPane.YES_NO_OPTION;
                if(newcodigo){
                    int dialogResult = JOptionPane.showConfirmDialog(this, "Deseja enviar o novo código para "+nome+" "+sobrenome+" ?", "Envio de código no discord", dialogButton);
                    if(dialogResult == 0) {
                        MensagemDiscord(my_obj);
                        //System.out.print("Mensagem enviada para: "+discord+" /// ");
                    } else {
                        System.out.println("Opção de não.");
                    } 
                }
                //AttDBUsuarios();
                policia.AttDBSTodas();
                usuariosDBarray = InicializadorMain.usuariosDBarray;
                discordDBarray = InicializadorMain.discordDBarray;
                //usuariosDBarray = policia.AttDBUsuarios();
                AttDBHierarquia();
                TabelaAtt();
                AtualizarInfo();
                
            }
            
        /*
            }else{
            showMessageDialog(null,
            "Já existe um usuário com o passaporte "+pass+"!",
            "Desculpe, tente outro passaporte",
            JOptionPane.ERROR_MESSAGE);
        }*/
        newcodigo=false;
    }
    
    public void AdicionarUser(){
        Usuario usuario = new Usuario();
        JSONObject obj = Usuario.UsuarioMain;//new JSONObject(usuario.getDados());
        int passause = Integer.parseInt(PassaAddU);
        
        /*
        ResultSet resulteSet = null;
        
        resulteSet = conexao.readDataBase2("cb_identities", "id", PassaAddU);
        int contage=0;
        try {
            while (resulteSet.next()) {
                contage++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Corporacao.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(contage!=0){*/
        boolean isLSPD = false;
        int pter=98;
        for(int hi2 = 0; hi2 < hierarquiaDBarray.length(); hi2++){
            JSONObject ohier = hierarquiaDBarray.getJSONObject(hi2);
            int pass = ohier.getInt("id_usuario");
            if(pass==passause){
                pter = ohier.getInt("cargo");
                if(pter != 99){
                    isLSPD=true;
                }else{
                    isLSPD=false;
                }
            }
        }
        if(!isLSPD){
            JSONObject AddLSPD = new JSONObject();
            AddLSPD.put("passaporte", PassaAddU);
            AddLSPD.put("nome", NomeU);
            //AddLSPD.put("discord", DiscordAddU);
            String Codegor = randomAlphaNumeric(4);
            AddLSPD.put("codigo", Codegor);
            nomeusuariog=PassaAddU;

            AddLSPD.put("patente", Bpatentes.getSelectedIndex()+"");
            AddLSPD.put("passaporteP", obj.getString("id_usuario"));
            AddLSPD.put("nomeP", obj.getString("nome"));
            AddLSPD.put("nome_patente", usuarios.Patentes(Bpatentes.getSelectedIndex()));
            String Discordae="";
            int temconta=0;
            for(int i = 0; i < usuariosDBarray.length(); i++){
                JSONObject user = usuariosDBarray.getJSONObject(i);
                int pass = user.getInt("id_usuario");
                /*
                if(pass == passause){
                    if(!"".equals(user.getString("discord"))){
                        //Discordae=user.getString("discord");
                        temconta=1;
                    }
                }*/
            }
            for(int idis = 0; idis < discordDBarray.length(); idis++){
                JSONObject disc = discordDBarray.getJSONObject(idis);
                int use_id = disc.getInt("user_id");
                if(use_id == passause)Discordae = disc.getString("identifier");
            }
            AddLSPD.put("discord", Discordae);
            AddLSPD.put("newuser", temconta);
            AddLSPD.put("oqfez", 1);
            if(conexao.AddUserLSPD(AddLSPD)){
                System.out.print("deu certo!!");
                //MensagemDiscord("kli0ns#3092","Seu código foi alterado!!","Seu novo código é: ASDA");
                
                JOptionPane.showMessageDialog(null, "O código de "+NomeU+" ("+PassaAddU+") é: "+Codegor, "Código gerado para o Usuário", JOptionPane.PLAIN_MESSAGE);
            }
            if(!"".equals(Discordae)){
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Deseja enviar o novo código para "+NomeU+" ?", "Envio de código no discord", dialogButton);
                if(dialogResult == 0) {
                    //MensagemDiscord(AddLSPD);
                    System.out.print("Mensagem enviada para: "+Discordae+" /// ");
                } else {
                    System.out.println("Opção de não.");
                } 
            }
            AttDBHierarquia();
            //MensagemHierarquia(AddLSPD);
        }else{
            JOptionPane.showMessageDialog(null, NomeU+" ("+PassaAddU+") já está na Polícia como "+usuarios.Patentes(pter)+".", "Já está na "+config.Abv_NomePolicia, JOptionPane.PLAIN_MESSAGE);
        }
        Bpatentes.setEnabled(false);
        AddCorp.setEnabled(false);
        //}
        AttDBUsuarios();
        //policia.AttDBUsuariosSet();
        AttDBHierarquia();
        TabelaAtt();
        AtualizarInfo();
    }
    
    public void AttDBUsuarios(){
        //policia.AttDBUsuariosSet();
        usuariosDBarray = InicializadorMain.usuariosDBarray;//policia.AttDBUsuarios();
    }
    
    public void AttDBHierarquia(){
        hierarquiaDBarray = InicializadorMain.hierarquiaDBarray;//usuarios.AttDBHierarquia();
    }
    
    
    public void AtivarCampos(){
        //cid.setEnabled(true);
        //cnome.setEnabled(true);
        //cnome1.setEnabled(true);
        //ccodigo.setEnabled(true);
        //cdiscord.setEnabled(true);
        editar.setVisible(false);
        salvar.setEnabled(true);
        desfazer.setVisible(true);
        btCodigo.setEnabled(true);
        pack();
    }
    
    public void DesativarCampos(){
        //cid.setEnabled(false);
        //cnome.setEnabled(false);
        //cnome1.setEnabled(false);
        //ccodigo.setEnabled(false);
        //cdiscord.setEnabled(false);
        editar.setVisible(true);
        salvar.setEnabled(false);
        desfazer.setVisible(false);
        btCodigo.setEnabled(false);
        pack();
    }
    
    public boolean SomenteNumeros(KeyEvent evt){
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
            (c == KeyEvent.VK_BACK_SPACE) ||
            (c == KeyEvent.VK_DELETE) ||
            (c == KeyEvent.VK_LEFT) ||
            (c == KeyEvent.VK_RIGHT)) ) {
            //getToolkit().beep();
            evt.consume();
        }
        return true;
    }
    
    public static String randomAlphaNumeric(int count) {
        StringBuilder builder = new StringBuilder();
        while (count-- != 0) {
            int character = (int)(Math.random()*ALPHA_NUMERIC_STRING.length());
            builder.append(ALPHA_NUMERIC_STRING.charAt(character));
        }
        return builder.toString();
    }
    
    public void Selecionar(){
        String PassSelecionado = membros.getValueAt(membros.getSelectedRow(), 2).toString();
        if(!PassSelecionado.equals(cid.getText())){
            //System.out.print("Já foi selecionado");
            //System.out.print("Não foi selecionado");
            AtualizarInfo();
        }
    }
    
    public void PesquisarT(){
        DefaultTableModel table = (DefaultTableModel)membros.getModel();
        String search = pesquisa.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        membros.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" +search));
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPassaporte = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Bpatentes = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        membros = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        nomeptt = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btexonerado = new javax.swing.JButton();
        pttatual = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        newptt = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        jButton6 = new javax.swing.JButton();
        btexonerado1 = new javax.swing.JButton();
        btexonerado2 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        attTab = new javax.swing.JButton();
        pesquisa = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        cid = new javax.swing.JTextField();
        cnome = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        ccodigo = new javax.swing.JTextField();
        salvar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        editar = new javax.swing.JButton();
        btCodigo = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        cnome1 = new javax.swing.JTextField();
        desfazer = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        AddCorp = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        nomeid = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GERENCIAR CORPORAÇÃO");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GERENCIAR CORPORAÇÃO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ADICIONAR CIDADÃO À POLICIA");

        txtPassaporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassaporteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPassaporteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPassaporteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PATENTE:");

        Bpatentes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Bpatentes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Bpatentes.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(txtPassaporte))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Bpatentes, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassaporte)
                    .addComponent(Bpatentes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        membros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "PATENTE", "PASSAPORTE", "DISCORD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        membros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membrosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                membrosMousePressed(evt);
            }
        });
        membros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                membrosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                membrosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(membros);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("GERENCIAR MEMBRO");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("MEMBROS");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("ÚLTIMO ACESSO:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("PRISÕES REALIZADAS:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("NÃO SELECIONADO");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("CURSOS E APRIMORAMENTOS");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel22.setText("14/11/2019 ÁS 21:00");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel30.setText("[Em desenvolvimento]");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("[Em desenvolvimento]");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("MULTAS DADAS:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("INFORMAÇÕES DETALHADAS");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel34.setText("ÚLTIMA PROMOÇÃO:");

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel35.setText("Nada selecionado");

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel36.setText("Nada selecionado");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("HIERARQUIA");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel39.setText("ÚLTIMA PATENTE:");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel43.setText("ENTROU NA CORPORAÇÃO:");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel44.setText("Nada selecionado");

        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("[EM DESENVOLVIMENTO]");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton1.setText("ADICIONAR/ REMOVER");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator5)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel42)
                .addContainerGap())
        );

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        nomeptt.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        nomeptt.setForeground(new java.awt.Color(255, 255, 255));
        nomeptt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomeptt.setText("NÃO SELECIONADO");

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("PATENTE ATUAL");

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("PROMOVER");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton3.setText("REBAIXAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btexonerado.setBackground(new java.awt.Color(255, 255, 255));
        btexonerado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btexonerado.setText("EXONERAR");
        btexonerado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btexoneradoActionPerformed(evt);
            }
        });

        pttatual.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        pttatual.setForeground(new java.awt.Color(255, 255, 255));
        pttatual.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pttatual.setText("Não selecionado");

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("NOVA PATENTE");

        newptt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        newptt.setForeground(new java.awt.Color(255, 255, 255));
        newptt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        newptt.setText("Não selecionado");

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("DESFAZER ALTERAÇÕES");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("SALVAR PATENTE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        btexonerado1.setBackground(new java.awt.Color(255, 255, 255));
        btexonerado1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btexonerado1.setText("+1");
        btexonerado1.setEnabled(false);
        btexonerado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btexonerado1ActionPerformed(evt);
            }
        });

        btexonerado2.setBackground(new java.awt.Color(255, 255, 255));
        btexonerado2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btexonerado2.setText("+2");
        btexonerado2.setEnabled(false);
        btexonerado2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btexonerado2ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("ADVERTÊNCIAS:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeptt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btexonerado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pttatual, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newptt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator8)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btexonerado1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btexonerado2)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nomeptt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pttatual)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newptt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btexonerado1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btexonerado2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btexonerado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        attTab.setBackground(new java.awt.Color(255, 255, 255));
        attTab.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        attTab.setText("ATUALIZAR (ddd)");
        attTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attTabActionPerformed(evt);
            }
        });

        pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pesquisaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(attTab)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attTab, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(pesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator4)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("ID:");

        cid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cid.setEnabled(false);

        cnome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cnome.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("NOME:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("CÓDIGO:");

        ccodigo.setEditable(false);
        ccodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ccodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        salvar.setBackground(new java.awt.Color(255, 255, 255));
        salvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        salvar.setText("SALVAR");
        salvar.setEnabled(false);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("INFORMAÇÕES BÁSICAS");

        editar.setBackground(new java.awt.Color(255, 255, 255));
        editar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        editar.setText("EDITAR");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        btCodigo.setBackground(new java.awt.Color(255, 255, 255));
        btCodigo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btCodigo.setText("NOVO");
        btCodigo.setEnabled(false);
        btCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCodigoActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText("SOBRENOME:");

        cnome1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cnome1.setEnabled(false);

        desfazer.setBackground(new java.awt.Color(255, 255, 255));
        desfazer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        desfazer.setText("DESFAZER");
        desfazer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desfazerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(salvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ccodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCodigo))
                    .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cid)
                            .addComponent(cnome)
                            .addComponent(cnome1, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(desfazer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cnome1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ccodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btCodigo))
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(editar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desfazer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AddCorp.setBackground(new java.awt.Color(255, 255, 255));
        AddCorp.setText("ADICIONAR À CORPORAÇÃO");
        AddCorp.setEnabled(false);
        AddCorp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCorpActionPerformed(evt);
            }
        });

        nomeid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nomeid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomeid.setText(" ");
        nomeid.setEnabled(false);

        jMenu2.setText("FECHAR");

        jMenuItem2.setText("VOLTAR PARA O PAINEL");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("EXIBIR");
        jMenu3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jMenuItem3.setText("SOBRE");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(AddCorp, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                            .addComponent(nomeid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeid)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AddCorp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddCorpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCorpActionPerformed
        
        AdicionarUser();
        InicializadorMain.AttDBSHierarquia();
        AttDBHierarquia();
        TabelaAtt();
    }//GEN-LAST:event_AddCorpActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        AtivarCampos();
        Alterou();
    }//GEN-LAST:event_editarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        DesativarCampos();
        SalvarDados();
    }//GEN-LAST:event_salvarActionPerformed

    private void membrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membrosMouseClicked
        Selecionar();
    }//GEN-LAST:event_membrosMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(PatenteP == 99){
            PatenteP=0;
            PatenteInsigna=0;
        }else{
            if(PatenteP < 12){
                if(PatenteInsigna >=3){
                    PatenteP++;
                    PatenteInsigna=0;
                }else{
                    PatenteInsigna++;
                }
            }else{
                PatenteP++;
            }
        }
        AtualizarPtt();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(PatenteP < 12){
            if(PatenteInsigna <= 0){
                PatenteP--;
                PatenteInsigna=3;
            }else{
                PatenteInsigna--;
            }
        }else if(PatenteP==12){
            PatenteP--;
            PatenteInsigna=3;
        }else{
            PatenteP--;
        }
        AtualizarPtt();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btexoneradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btexoneradoActionPerformed
        /*
        PatenteP=99;
        PatenteInsigna=0;
        newptt.setText("EXONERADO");
        btexonerado.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(true);
        
        Alterou();
        */
        JSONObject obj = Usuario.UsuarioMain;//new JSONObject(usuario.getDados());
        if(Integer.parseInt(obj.getString("id_usuario")) == PassaporteP){
            showMessageDialog(null,"Impossível excluir o seu próprio acesso.","Ocorreu um erro",JOptionPane.PLAIN_MESSAGE);
            System.err.println("ERRO AO EXCLUIR PROPRIO ACESSO");
        }else{
            Object[] options = { "Sim, excluir", "Não, cancelar" }; 
            int Escolha=JOptionPane.showOptionDialog(null,
                "Tem certeza que deseja excluir o acesso de "+NomeP+"?", // \n
                "Excluir Acesso de Usuário", 
                JOptionPane.DEFAULT_OPTION, 
                JOptionPane.WARNING_MESSAGE, 
                null, 
                options, 
                options[0]);
            if(Escolha==JOptionPane.YES_OPTION){
                conexao.DeleteUserLSPD(PassaporteP);
                showMessageDialog(null,"O acesso de "+NomeP+" foi excluido com sucesso!","Acesso excluido",JOptionPane.PLAIN_MESSAGE);
                System.err.println("EXCLUIDO COM SUCESSO");
                InicializadorMain.AttDBSHierarquia();
                AttDBHierarquia();
                TabelaAtt();
            }
        }
    }//GEN-LAST:event_btexoneradoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AtualizarInfo();
        TabelaAtt();
        DesativarCampos();
        Alterou();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        JSONObject set_info = new JSONObject();
        Usuario usuario = new Usuario();
        JSONObject obj = Usuario.UsuarioMain;//new JSONObject(usuario.getDados());
        set_info=obj;
        /*set_info.put("nome", obj.getString("nome"));
        set_info.put("codigo", obj.getString("codigo"));
        set_info.put("discord", obj.getString("discord"));
        set_info.put("age", obj.getInt("age"));
        set_info.put("permissao", obj.getInt("permissao"));*/
        
        set_info.put("ptt_passaporte", PassaporteP+"");
        set_info.put("ptt_nome", NomeP);
        set_info.put("ptt_patente", PatenteP+"");
        set_info.put("ptt_patente_old", PatentePA+"");
        
        set_info.put("ptt_codigo", CodigoP);
        set_info.put("ptt_discord", Discord);
        set_info.put("ptt_stars", PatenteInsigna+"");
        set_info.put("ptt_stars_old", PatenteInsignaA+"");
        
        //salvar dados do usuário atual
        System.err.println("set_info: "+ set_info.toString()+"/ fechou");
        usuario.setDadosalvar(set_info);
        /*
        SalvarDadosCorporacao salvard = new SalvarDadosCorporacao();
        salvard.setVisible(true);
        this.dispose();
        */
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCodigoActionPerformed
        ccodigo.setText(randomAlphaNumeric(4));
        newcodigo=true;
    }//GEN-LAST:event_btCodigoActionPerformed

    private void btexonerado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btexonerado1ActionPerformed
        AddUser usuarios = new AddUser();
        //usuarios.AA="OLOKINHO";
        usuarios.setVisible(true);
    }//GEN-LAST:event_btexonerado1ActionPerformed

    private void btexonerado2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btexonerado2ActionPerformed
        //MensagemDiscord("kli0ns#3092","Seu código foi alterado!!","Seu novo código é: ASDA");
    }//GEN-LAST:event_btexonerado2ActionPerformed

    private void txtPassaporteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassaporteKeyPressed
        //SomenteNumeros(evt);
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String tpassa = txtPassaporte.getText();
            if(tpassa.length() <= 0)return;
            PassaAddU = txtPassaporte.getText();
            /*
            JTextField text0 = new JTextField(12);
            JTextField text1 = new JTextField(12);
            JTextField text2 = new JTextField(12);
            JTextField text3 = new JTextField(12);
            text0.setText(txtPassaporte.getText());
            text0.setEnabled(false);
            text0.addKeyListener(new KeyAdapter() {
                public void keyPressed(KeyEvent ke) {
                    String value = text0.getText();
                    
                    int l = value.length();
                    if (ke.getKeyChar() >= '0' && ke.getKeyChar() <= '9' && l < 4) {
                       text0.setEditable(true);
                    } else {
                       text0.setEditable(false);
                    }
                }
            });

            JPanel panel = new JPanel(new GridLayout(0, 2));
            panel.add(new JLabel("PASSAPORTE: "));
            panel.add(text0);
            panel.add(new JLabel("NOME: "));
            panel.add(text1);
            panel.add(new JLabel("SOBRENOME: "));
            panel.add(text2);
            
            panel.add(new JLabel("DISCORD: "));
            panel.add(text3);*/
            
            Bpatentes.setEnabled(false);
            AddCorp.setEnabled(false);
            Bpatentes.setSelectedIndex(0);
            String Pasw=txtPassaporte.getText();
            //PassaAddU="";
            
            /*ResultSet resulteSet = null;
            resulteSet = conexao.readDataBase2("cb_identities", "id", Pasw);*/
            long datar=System.currentTimeMillis();
            boolean conte=false;
            boolean lspde=false;
            String nomw="Sujeito";
            String sobw="Indigente";
            
            PassCida=Integer.parseInt(txtPassaporte.getText());
            for(int i = 0; i < usuariosDBarray.length(); i++){
                JSONObject o = usuariosDBarray.getJSONObject(i);
                int pass = o.getInt("id_usuario");
                if(PassCida==pass){
                    nomw=o.getString("nome");
                    sobw=o.getString("sobrenome");
                    conte=true;
                    for(int i2 = 0; i2 < hierarquiaDBarray.length(); i2++){
                        JSONObject ohier = hierarquiaDBarray.getJSONObject(i2);
                        //System.out.println("hierarquiaDBarray: "+ohier.toString()+" // ");
                        if(pass==ohier.getInt("id_usuario")){
                            
                            int pter = ohier.getInt("cargo");
                            if(pter>0 && pter<99){
                                lspde=true;
                            }else{
                                lspde=false;
                            }
                        }
                    }
                }
            }
            /*
            try {
                while (resulteSet.next()) {
                    conte=true;
                    nomw=resulteSet.getString("nome");
                    sobw=resulteSet.getString("sobrenome");
                    
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Corporacao.class.getName()).log(Level.SEVERE, null, ex);
            }
            */
            if(!conte){
                JOptionPane.showMessageDialog(null, "O ID: "+PassaAddU+" não está registrado em nosso banco de dados.", "Erro ao buscar registro", JOptionPane.PLAIN_MESSAGE);
                nomw="Erro";
                sobw="no ID";
                PassCida=0;
                /*
                int result = JOptionPane.showConfirmDialog(null, panel, "Adicionar Cidadão", JOptionPane.OK_CANCEL_OPTION);
                if (result == JOptionPane.OK_OPTION) {
                    //return new MyData(text0.getText(), text1.getText());
                    System.out.print("text0: "+text0.getText()+" / text1: "+text1.getText());

                    if(text1.getText().length() < 3){
                        JOptionPane.showMessageDialog(null, "Nome "+text1.getText()+" é muito pequeno! Tente novamente.", "Erro no nome do cidadão", JOptionPane.PLAIN_MESSAGE);
                    }else
                    if(text2.getText().length() < 10){
                        JOptionPane.showMessageDialog(null, "Discord "+text2.getText()+" é muito pequeno! Tente novamente.", "Erro no discord do cidadão", JOptionPane.PLAIN_MESSAGE);
                    }else{
                        Bpatentes.setEnabled(true);
                        AddCorp.setEnabled(true);
                        
                        PassaAddU=text0.getText();
                        nomw=text1.getText();
                        sobw=text2.getText();
                        NomeU=text1.getText()+" "+text2.getText();
                        DiscordAddU=text2.getText();
                    }
                }*/
                
            }else{
                if(lspde){
                    JOptionPane.showMessageDialog(null, nomw+" já está como "+config.Abv_NomePolicia+"!", "Opa, me parece que "+sobw+" já é da "+config.Abv_NomePolicia+".", JOptionPane.PLAIN_MESSAGE);
                }
                if("".equals(nomw)) nomw="Sujeito";
                if("".equals(sobw)) nomw="Indigente";
                Bpatentes.setEnabled(true);
                AddCorp.setEnabled(true);
            }
            nomeid.setText(nomw+" "+sobw+" ("+PassCida+")");
            NomeU=nomw+" "+sobw;
            //jLabel3.setText("Adicionar: "+nomw);
            
        }
    }//GEN-LAST:event_txtPassaporteKeyPressed

    private void txtPassaporteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassaporteKeyReleased
        SomenteNumeros(evt);
    }//GEN-LAST:event_txtPassaporteKeyReleased

    private void txtPassaporteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassaporteKeyTyped
        SomenteNumeros(evt);
    }//GEN-LAST:event_txtPassaporteKeyTyped

    private void membrosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membrosKeyReleased
        Selecionar();       // TODO add your handling code here:
    }//GEN-LAST:event_membrosKeyReleased

    private void membrosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membrosKeyTyped
        Selecionar();        // TODO add your handling code here:
    }//GEN-LAST:event_membrosKeyTyped

    private void membrosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membrosMousePressed
        Selecionar();// TODO add your handling code here:
    }//GEN-LAST:event_membrosMousePressed

    private void attTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attTabActionPerformed
        //AttDBUsuarios();
        AttDBHierarquia();
        TabelaAtt();
    }//GEN-LAST:event_attTabActionPerformed

    private void desfazerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desfazerActionPerformed
        DesativarCampos();
        AtualizarInfo();
    }//GEN-LAST:event_desfazerActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new Painel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InicializadorMain.sobre.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void pesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyTyped
        /*String text = pesquisa.getText();
        if (text.trim().length() == 0) {
           //rowSorter.setRowFilter(null);
        } else {
           membros.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }*/
        PesquisarT();
    }//GEN-LAST:event_pesquisaKeyTyped

    private void pesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyReleased
        PesquisarT();
    }//GEN-LAST:event_pesquisaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Corporacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Corporacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Corporacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Corporacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Corporacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddCorp;
    private javax.swing.JComboBox<String> Bpatentes;
    private javax.swing.JButton attTab;
    private javax.swing.JButton btCodigo;
    private javax.swing.JButton btexonerado;
    private javax.swing.JButton btexonerado1;
    private javax.swing.JButton btexonerado2;
    private javax.swing.JTextField ccodigo;
    private javax.swing.JTextField cid;
    private javax.swing.JTextField cnome;
    private javax.swing.JTextField cnome1;
    private javax.swing.JButton desfazer;
    private javax.swing.JButton editar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTable membros;
    private javax.swing.JLabel newptt;
    private javax.swing.JLabel nomeid;
    private javax.swing.JLabel nomeptt;
    private javax.swing.JTextField pesquisa;
    private javax.swing.JLabel pttatual;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField txtPassaporte;
    // End of variables declaration//GEN-END:variables
}
