/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package police;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.ZonedDateTime;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.JDA;
import net.dv8tion.jda.api.entities.TextChannel;
import net.dv8tion.jda.api.entities.User;
import org.json.JSONArray;
import org.json.JSONObject;
import org.ocpsoft.prettytime.PrettyTime;
import police.configs.ConexaoDB;
import police.configs.Config;
import police.configs.Usuario;

/**
 *
 * @author John
 */
public class ItensBanco extends javax.swing.JFrame {

    /**
     * Creates new form Corporacao
     */
    JButton[] PMenos = new JButton[50];
    JButton[] PMais = new JButton[50];
    JButton[] PRemover = new JButton[50];
    
    JLabel[] Nome = new JLabel[50];
    JLabel[] Patente = new JLabel[50];
    JLabel[] FzeOq = new JLabel[50];
    
    Usuario usuarios = new Usuario();
    ConexaoDB conexao = new ConexaoDB();
    InicializadorMain policia = new InicializadorMain();
    
    String passaporteg = "";
    String nomeusuariog = "";
    
    String PassaAddU="";
    String NomeU="";
    String DiscordAddU="";
    JSONArray discordDBarray = new JSONArray();
    
    String NomeP="";
    int PatenteP=0;
    int PatentePA=0;
    String CodigoP="";
    String Discord="";
    int PassaporteP=-1;
    
    int PassCida=-1;
    
    int TimerAtte = 30;
    
    boolean newcodigo = false;
    
    JDA jda;
    
    JSONObject usuariosDB = new JSONObject();
    JSONArray usuariosDBarray = new JSONArray();
    JSONArray usuarioMyDBarray = new JSONArray();
    JSONArray logItensDBarray = new JSONArray();
    
    
    private static final String ALPHA_NUMERIC_STRING = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
    
    public ItensBanco() {
        initComponents();
        IniciarDados();
        DiscordBot();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void IniciarDados(){
        
        getContentPane().setBackground(new java.awt.Color(13, 32, 64));
        jPanel1.setBackground(new java.awt.Color(13, 32, 64));
        jPanel2.setBackground(new java.awt.Color(13, 32, 64));
        jPanel3.setBackground(new java.awt.Color(13, 32, 64));
        jPanel3.setBackground(new java.awt.Color(13, 32, 64));
        
        this.setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("imagens/lspd-small.png")));
        
        
        usuariosDBarray = policia.AttDBUsuarios();
        discordDBarray = policia.AttDBDiscord();
        
        //AttDBUsuarios();
        AttDBHierarquia();
        TabelaAtt();
        
        Dados();
        Timere();
    }
    public void DiscordBot(){
        jda = policia.getJDA();
    }
    
    public void Timere (){
        int delay = 500;   // tempo de espera antes da 1ª execução da tarefa.
        int interval = 1000;  // intervalo no qual a tarefa será executada.
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
          public void run() {
            //System.out.println("Olá World!"); 
            if(TimerAtte > 0){
                TimerAtte--;
                String taimer;
                if(TimerAtte>9){
                    taimer=""+TimerAtte;
                }else{
                    taimer="0"+TimerAtte;
                }
                attTab.setText("ATUALIZAR ("+taimer+")");
                attTab.setEnabled(false);
            }else{
                attTab.setEnabled(true);
                attTab.setText("ATUALIZAR AGORA");
            }
          }
        }, delay, interval);
    }
    
    public void Dados(){
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        
        /*membros.getColumnModel().getColumn(0).setPreferredWidth(50);
        membros.getColumnModel().getColumn(1).setPreferredWidth(40);
        membros.getColumnModel().getColumn(2).setPreferredWidth(20);
        membros.getColumnModel().getColumn(3).setPreferredWidth(40);
        
        
        membros.getColumnModel().getColumn(0).setHeaderRenderer(centerRenderer);
        membros.getColumnModel().getColumn(1).setHeaderRenderer(centerRenderer);
        membros.getColumnModel().getColumn(2).setHeaderRenderer(centerRenderer);
        membros.getColumnModel().getColumn(3).setHeaderRenderer(centerRenderer);
        
        membros.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        membros.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        membros.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        membros.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );*/
    }
    public void TabelaAtt(){
        DefaultTableModel model = (DefaultTableModel) membros.getModel();
        model.setRowCount(0);
        pesquisa.setText("");
        PesquisarT();
        TimerAtte=20;
        //System.out.println("usuariosDBarray: "+usuariosDBarray.toString()+" ?°/ ");
        for(int i = 0; i < usuariosDBarray.length(); i++){
            JSONObject o = usuariosDBarray.getJSONObject(i);
            //if(o.getInt("lspd") >= 1){
            int pass = o.getInt("id_usuario");
            for(int logi = 0; logi < logItensDBarray.length(); logi++){
                JSONObject loge = logItensDBarray.getJSONObject(logi);
                //System.out.println("hierarquiaDBarray: "+ohier.toString()+" // ");
                if(pass==loge.getInt("id_usuario")){
                    java.util.Date date = new java.util.Date(loge.getLong("data"));
                    SimpleDateFormat formatter = new SimpleDateFormat("dd/MM hh:mm:ss");  
                    String strDate= formatter.format(date);  
                    model.addRow(new Object[]{pass, loge.getString("profissao_user"), loge.getString("tipo"), loge.getString("id_rece"), loge.getString("profissao_recebeu"), loge.getString("item"), strDate});
                }
            }
        }
    }
    
    public void MensagemDiscord(String DiscordTag, String Titulo, String Texto){
        //User usuar = jda.getUserByTag(DiscordTag);
        User usuar = jda.getUserById(DiscordTag);
        Config config = new Config();
        EmbedBuilder eb = new EmbedBuilder();
        eb.setTitle(Titulo, null);

        /*
            Set the color
         */
        //eb.setColor(Color.blue);
        eb.setColor(new Color(0x0D2040));
        //eb.setColor(new Color(255, 0, 54));

        /*
            Set the text of the Embed:
            Arg: text as string
         */
        eb.setDescription(Texto);

        /*
            Add fields to embed:
            1. Arg: title as string
            2. Arg: text as string
            3. Arg: inline mode true / false
         */
        //eb.addField("Title of field", "test of field", false);

        /*
            Add spacer like field
            Arg: inline mode true / false
         */
        //eb.addBlankField(false);

        /*
            Add embed author:
            1. Arg: name as string
            2. Arg: url as string (can be null)
            3. Arg: icon url as string (can be null)
         */
        //eb.setAuthor("name", null, "https://i.imgur.com/3RuZCiB.png");

        /*
            Set footer:
            1. Arg: text as string
            2. icon url as string (can be null)
         */
        
        eb.setFooter("Computador de Bordo [ver. "+config.versao+"]", null);

        /*
            Set image:
            Arg: image url as string
         */
        //eb.setImage("https://i.imgur.com/3RuZCiB.png");

        /*
            Set thumbnail image:
            Arg: image url as string
         */
        eb.setThumbnail("https://i.imgur.com/3RuZCiB.png");
        
        usuar.openPrivateChannel().queue((channel) ->
        {
            channel.sendMessage(eb.build()).queue();
        });
    }
    
    public void MensagemHierarquia(JSONObject dados){
        
        //MUDAR ESSAS COISAS
        //String Titulo = dados.getString("oqfez");
        
        
        Usuario usuario = new Usuario();
        JSONObject obj = new JSONObject(usuario.getDados());
        
        String id_usuario = dados.getString("passaporte");
        String id_promoveu = obj.getString("id_usuario");
        
        String nome_usuario = dados.getString("nome");
        String nome_promoveu = obj.getString("nome");
        String patente = dados.getString("nome_patente");
        
        String Texto = "**"+nome_usuario+"** foi **recrutado** para a LSPD como **"+patente+"**.";
        
        int cor = 0x339933;
        
        Config config = new Config();
        String canal="658497570900934662";
        TextChannel usuar = jda.getTextChannelById​(Long.parseLong(canal));
        
        EmbedBuilder eb = new EmbedBuilder();
        eb.setTitle("Adição na hierarquia", null);
        eb.setColor(new Color(cor));
        eb.setDescription(Texto);
        eb.addField("Policial recrutado", nome_usuario+" ("+id_usuario+")", true);
        eb.addField("Oficial recrutador", nome_promoveu+" ("+id_promoveu+")", true);
        eb.addField("Patente", patente, true);
        
        eb.setFooter("Computador de Bordo [ver. "+config.versao+"]", null);

        eb.setThumbnail("https://i.imgur.com/3RuZCiB.png");
        Instant instant = Instant.from(ZonedDateTime.now());
        eb.setTimestamp(instant);
        
        usuar.sendMessage(eb.build()).queue();
    }
    
    
    
    public void AtualizarInfo(){
        //System.out.print(membros.getValueAt(membros.getSelectedRow(), 2).toString());
        String PassSelecionado = "0";
        newcodigo=false;
        if(membros.getSelectedRow() < 0){
            if(nomeusuariog.length() > 0)PassSelecionado = nomeusuariog;
        }else{
            PassSelecionado = membros.getValueAt(membros.getSelectedRow(), 2).toString();
            nomeusuariog = PassSelecionado;
        }
        for(int i = 0; i < usuariosDBarray.length(); i++){
            JSONObject o = usuariosDBarray.getJSONObject(i);
            int paser = Integer.parseInt(PassSelecionado);
            if(paser==o.getInt("id_usuario")){
                int pass = o.getInt("id_usuario");
                String discord = o.getString("discord");
                String nome = o.getString("nome");
                String sobrenome = o.getString("sobrenome");
                String codigo = o.getString("codigo");
                //System.out.println("usuariosDBarray: "+o.toString()+" ?°/ ");

                int pter=0;
                int pter2=0;

                boolean checker=false;
                long dater=0;
                long datar=0;
                for(int i2 = 0; i2 < logItensDBarray.length(); i2++){
                    JSONObject ohier = logItensDBarray.getJSONObject(i2);
                    //System.out.println("logItensDBarray: "+ohier.toString()+" // ");
                    if(pass==ohier.getInt("id_usuario")){
                        pter = ohier.getInt("cargo");
                        pter2= ohier.getInt("cargo_antigo");
                        datar= ohier.getLong("data");
                        if(!checker){
                            checker=true;
                            dater=ohier.getLong("data");
                        }
                    }
                }
                String patente = usuarios.Patentes(pter);
                String patenteo = usuarios.Patentes(pter2);
                PatenteP=pter;
                PatentePA=PatenteP;

                PrettyTime p = new PrettyTime();
                long ultimologin = o.getLong("ultimologin");
                String ErOq;
                if(ultimologin < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(ultimologin));
                }
                
                jLabel22.setText(ErOq);
                
                //System.out.println(p.format(new Date(System.currentTimeMillis() - 1000*60*10)));
                //System.out.println(System.currentTimeMillis());
                
                if(datar < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(datar));
                }

                if(dater < 10000){
                    ErOq= "Nunca";
                }else{
                    ErOq= p.format(new Date(dater));
                }
            }
        }
    }
    
    public void AttDBUsuarios(){
        usuariosDBarray = usuarios.AttDBUsuarios();
    }
    public void AttDBUsuarioMy(){
        usuarioMyDBarray = usuarios.AttDBUsuarioMy();
    }
    
    public void AttDBHierarquia(){
        logItensDBarray = usuarios.AttDBLogItens();
    }
    
    public boolean SomenteNumeros(KeyEvent evt){
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
            (c == KeyEvent.VK_BACK_SPACE) ||
            (c == KeyEvent.VK_DELETE) ||
            (c == KeyEvent.VK_LEFT) ||
            (c == KeyEvent.VK_RIGHT)) ) {
            //getToolkit().beep();
            evt.consume();
        }
        return true;
    }
    
    public static String randomAlphaNumeric(int count) {
        StringBuilder builder = new StringBuilder();
        while (count-- != 0) {
            int character = (int)(Math.random()*ALPHA_NUMERIC_STRING.length());
            builder.append(ALPHA_NUMERIC_STRING.charAt(character));
        }
        return builder.toString();
    }
    
    public void Selecionar(){
        String PassSelecionado = membros.getValueAt(membros.getSelectedRow(), 2).toString();
        if(!PassSelecionado.equals(ID.getText())){
            //System.out.print("Já foi selecionado");
            //System.out.print("Não foi selecionado");
            AtualizarInfo();
        }
    }
    public void PesquisarT(){
        DefaultTableModel table = (DefaultTableModel)membros.getModel();
        String search = pesquisa.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(table);
        membros.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter("(?i)" +search));
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        membros = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        attTab = new javax.swing.JButton();
        pesquisa = new javax.swing.JTextField();
        ID = new javax.swing.JTextField();
        attTab1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GERENCIAR CORPORAÇÃO");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LOG DE ITENS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 24))); // NOI18N

        membros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PROFISSÃO", "TIPO", "ID RECEPTOR", "PROF. RECEPTOR", "ITEM", "DATA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membros.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        membros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membrosMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                membrosMousePressed(evt);
            }
        });
        membros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                membrosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                membrosKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(membros);

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("INFORMAÇÕES DE $$$");

        attTab.setBackground(new java.awt.Color(255, 255, 255));
        attTab.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        attTab.setText("ATUALIZAR (ddd)");
        attTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attTabActionPerformed(evt);
            }
        });

        pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pesquisaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pesquisaKeyTyped(evt);
            }
        });

        ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                IDKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IDKeyTyped(evt);
            }
        });

        attTab1.setBackground(new java.awt.Color(255, 255, 255));
        attTab1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        attTab1.setText("BUSCAR ID");
        attTab1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attTab1ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ITENS EM QUESTÃO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N

        jList1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList1);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("POSIÇÃO NO MAPA");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("DATA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES DE QUEM ENVIOU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("NOME COMPLETO");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("PROFISSÃO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES DE QUEM RECEBEU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("NOME COMPLETO");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("PROFISSÃO");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(attTab1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                                .addComponent(pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attTab))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attTab1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                        .addComponent(attTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pesquisa)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jMenu2.setText("FECHAR");

        jMenuItem2.setText("VOLTAR PARA O PAINEL");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("EXIBIR");
        jMenu3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jMenu3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jMenuItem3.setText("SOBRE");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void membrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membrosMouseClicked
        Selecionar();
    }//GEN-LAST:event_membrosMouseClicked

    private void membrosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membrosKeyReleased
        Selecionar();       // TODO add your handling code here:
    }//GEN-LAST:event_membrosKeyReleased

    private void membrosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_membrosKeyTyped
        Selecionar();        // TODO add your handling code here:
    }//GEN-LAST:event_membrosKeyTyped

    private void membrosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membrosMousePressed
        Selecionar();// TODO add your handling code here:
    }//GEN-LAST:event_membrosMousePressed

    private void attTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attTabActionPerformed
        //AttDBUsuarios();
        AttDBHierarquia();
        TabelaAtt();
    }//GEN-LAST:event_attTabActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new Painel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        new Sobre().setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void pesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyTyped
        /*String text = pesquisa.getText();
        if (text.trim().length() == 0) {
           //rowSorter.setRowFilter(null);
        } else {
           membros.setRowFilter(RowFilter.regexFilter("(?i)" + text));
        }*/
        PesquisarT();
    }//GEN-LAST:event_pesquisaKeyTyped

    private void pesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pesquisaKeyReleased
        PesquisarT();
    }//GEN-LAST:event_pesquisaKeyReleased

    private void IDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_IDKeyReleased

    private void IDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_IDKeyTyped

    private void attTab1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attTab1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attTab1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItensBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItensBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItensBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItensBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItensBanco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID;
    private javax.swing.JButton attTab;
    private javax.swing.JButton attTab1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable membros;
    private javax.swing.JTextField pesquisa;
    // End of variables declaration//GEN-END:variables
}
